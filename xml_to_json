# f = open("xml.txt", 'r')
# print(f.read()) #for e in f
# f.close()


import json
elements = ['<users>', '<user>', '<id>', '1', '</id>', '<name>', 'Ahmed Ali', '</name>', '<posts>', '<post>', '<body>', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.', '</body>', '<topics>', '<topic>', 'economy', '</topic>', '<topic>', 'finance', '</topic>', '</topics>', '</post>', '<post>', '<body>', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.', '</body>', '<topics>', '<topic>', 'solar_energy', '</topic>', '</topics>', '</post>', '</posts>', '<followers>', '<follower>', '<id>', '2', '</id>', '</follower>', '<follower>', '<id>', '3', '</id>', '</follower>', '</followers>', '</user>', '<user>', '<id>', '2', '</id>', '<name>', 'Yasser Ahmed', '</name>', '<posts>', '<post>', '<body>', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.', '</body>', '<topics>', '<topic>', 'education', '</topic>', '</topics>', '</post>', '</posts>', '<followers>', '<follower>', '<id>', '1', '</id>', '</follower>', '</followers>', '</user>', '<user>', '<id>', '3', '</id>', '<name>', 'Ahmed Magdy', '</name<posts>', '<posts>', '<post>', '<body>', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.', '</body>', '<topics>', '<topic>', 'sports', '</topic>', '</topics>', '</post>', '</posts>', '<followers>', '<follower>', '<id>', '1', '</id>', '</follower>', '</followers>', '</user>', '</users>']
# obj = json.dumps(elements)
# print(obj)

def json_print_tag(element, counter):
    # "element" : { or [
    l = len(element)
    xml_f.write("\n")  # endline
    xml_f.write("\"")
    xml_f.write(element[1: l - 1])
    if counter == 1:
        xml_f.write("\": {")
    elif counter > 1:
        xml_f.write("\": [\n{")

def xml_to_json_cov(elements):
    '''
    function that detect element repeated how many times
    :param elements: elements which is list of (tags + data) of xml file
    :return: no return
    '''

    element_list = []
    multple_elements_table = []
    iterator = 0
    my_flag = True
    for ii in range(len(elements)):
        if not ('<' in elements[ii]): #value?
            #int?
            if isinstance(elements[ii], int) == True:
                xml_f.write(int(elements[ii]))
            else:
                xml_f.write(elements[ii])
            continue
        elements[ii]
        l = len(elements[ii])
        counter = 0

        # to prevent counting number twice: like user
        if elements[ii] in element_list:
            if elements[ii] in multple_elements_table:
                xml_f.write(",\n{")
            else:
                counter = 1
                json_print_tag(elements[ii], counter)
            continue

        # closed tag so put '}'
        if '/' in elements[ii]:
            #how many closing of me? if 1 print } else print ]
            count_closing = 0
            count_closing_tag = 0
            for e in elements:
                if e == elements[ii]:
                    count_closing_tag = count_closing_tag + 1
            #easy_last_one
            if count_closing_tag == 1:
                xml_f.write('}')
                continue
            #hard_one
            else:
                my_county = 1

                # iterator = iterator + 1
                county = multple_elements_table[my_county + 2 * iterator]
                ele2 = multple_elements_table[0 + 2 * iterator]
                iii = elements.index(ele2)
                ele2 = "</" + ele2[1 : len(ele2)-1] + ">"
                flag = True
                while flag:
                    if elements[ii] == elements[iii]:
                        count_closing = count_closing + 1 #count number of element between ref_arr
                    if elements[iii] == ele2:
                        flag = False
                    iii = iii + 1
                if count_closing > 0:
                    xml_f.write('}')
                else:
                    xml_f.write('},\n]')
                    #array finished
                    iterator = iterator - 1
            continue

        #else start counting it
        # first time?
        if ii == 0:
            counter = 1
            element_list.append(elements[ii])
            json_print_tag(elements[ii], counter)
        else:
            #first_ref_array
            if iterator == 0 and my_flag == True:
                my_flag = False
                multpe_count = 0
                for mm in range(len(elements)):
                    if elements[mm] == elements[ii]:
                        multpe_count = multpe_count + 1
                if multpe_count > 1:
                    multple_elements_table.append(elements[ii])
                    multple_elements_table.append(multpe_count)
                    counter = multpe_count
            else:
                #search from ref array till it's closing tag
                before_me = multple_elements_table[0 + 2 * iterator]
                jj = elements.index(before_me)  # to find index of b4_me
                before_me = "</" + before_me[1: len(before_me) - 1] + ">"
                e14 = elements[jj] #from ref_array and increase
                e2 = elements[ii] #Id
                while e14 != before_me:
                # for jj in range(ii, len(elements)):
                    if e2 == e14: #Id == ref_arr increase counter
                        counter = counter + 1 #counter == 1 means i found myself yeeey..
                    jj = jj + 1
                    e14 = elements[jj]
            element_list.append(elements[ii])
            json_print_tag(elements[ii], counter)

            # it's array so refrence it
            if counter > 1 and len(element_list) > 2:
                iterator = iterator + 1
                multple_elements_table.append(elements[ii])
                multple_elements_table.append(counter)

xml_f = open("xml.txt", 'w')
xml_f.write("{")

my_elements = ["<users>", "<user>", "</user>", "<user>","</user>", "</users>"]
meta_elements = ["<users>", "<user>", "<id>", "</id>", "<name>", "</name>","</user>", "<user>", "<id>", "</id>", "<name>",  "</name>","</user>", "</users>"]
meta_elements2 = ["<users>", "<user>", "<id>", "1", "</id>", "<name>", "Ahmed Magdi","</name>","</user>", "<user>", "<id>", "2", "</id>", "<name>", "Ahmed Ayman", "</name>","</user>", "</users>"]

xml_to_json_cov(meta_elements2)
xml_f.write("\n}")

xml_f.close()
